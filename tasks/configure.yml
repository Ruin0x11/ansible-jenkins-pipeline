---
- name: Wait for Jenkins to become available
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

- name: Get Jenkins crumb
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}/crumbIssuer/api/json"
    return_content: yes
    status_code: 200, 404
  register: jenkins_crumb
  until: jenkins_crumb.status == 200 and jenkins_crumb.content.find('Please wait while Jenkins is getting ready to work') == -1
  retries: 10
  delay: 5

- name: Set crumb token
  set_fact:
    jenkins_crumb_token: "{{ jenkins_crumb.json.crumbRequestField }}={{ jenkins_crumb.json.crumb }}"

- name: Get installed plugins
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}/pluginManager/api/json?tree=plugins[shortName]&{{ jenkins_crumb_token }}"
    return_content: yes
  register: jenkins_installed_plugins

- name: Install plugins
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}/pluginManager/install?plugin.{{ item }}.default=on&{{ jenkins_crumb_token }}"
    method: POST
    status_code: [200, 302]
  when: item not in jenkins_installed_plugins.json.plugins|map(attribute='shortName')|list
  with_items: "{{ jenkins_plugins }}"

- name: Wait for plugins to be installed
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}/updateCenter/installStatus?{{ jenkins_crumb_token }}"
    return_content: yes
  register: jenkins_plugin_status
  until: "'Pending' not in jenkins_plugin_status.json.data.jobs|map(attribute='installStatus')"
  retries: 60
  delay: 10

- name: Add cloud configs to config.xml
  replace:
    dest: "{{ jenkins_home }}/config.xml"
    regexp: "<clouds/>"
    replace: |
      <clouds>
        {{ jenkins_cloud_configs }}
      </clouds>

- name: Check if we need to restart Jenkins to activate plugins
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}/updateCenter/api/json\
    ?tree=restartRequiredForCompletion&{{ jenkins_crumb_token }}"
    return_content: yes
  register: jenkins_restart_required

  # - name: Restart Jenkins to activate new plugins
  #   service: name=jenkins state=restarted
  #   when: jenkins_restart_required.json.restartRequiredForCompletion|bool
  # 
- name: Wait for Jenkins to become available
  uri:
    user: admin
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    url: "{{ jenkins_virtual_host }}"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

- include_tasks: seed-job.yml
